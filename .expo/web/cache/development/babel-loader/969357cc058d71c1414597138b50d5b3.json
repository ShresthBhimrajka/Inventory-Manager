{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\GitHub\\\\Inventory-Manager\\\\screens\\\\Scan.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport firebase from 'firebase';\nimport { addItem, updateRec } from \"../DataBaseUpdate\";\nimport { Colors } from \"../assets/Colors\";\nimport Card from \"../components/Card\";\nimport FormInput from \"../components/FormInput\";\nimport FormButton from \"../components/FormButton\";\n\nvar Scan = function Scan() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setItemName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      quantity = _useState4[0],\n      setQuantity = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      id = _useState6[0],\n      setId = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      empId = _useState8[0],\n      setEmpId = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      empName = _useState10[0],\n      setEmpName = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      orgname = _useState12[0],\n      setOrgName = _useState12[1];\n\n  var userId = firebase.auth().currentUser.uid;\n  useEffect(function () {\n    function getUserInfo() {\n      var docuser, dataObj;\n      return _regeneratorRuntime.async(function getUserInfo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(firebase.firestore().collection('allusers').doc(userId).get());\n\n            case 2:\n              docuser = _context.sent;\n\n              if (!docuser.exists) {\n                Alert.alert('No user data found!');\n              } else {\n                dataObj = docuser.data();\n                setEmpId(userId);\n                setEmpName(dataObj.name);\n                setOrgName(dataObj.orgname);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getUserInfo();\n  });\n\n  var itemHandler = function itemHandler() {\n    if (!name) {\n      Alert.alert('Enter the item name');\n    } else if (!id) {\n      Alert.alert('Enter item id');\n    } else if (!quantity) {\n      Alert.alert('Enter the quantity');\n    } else {\n      addItem(id, name, quantity, orgname);\n      updateRec(id, name, quantity, 'in', empName, empId, orgname);\n      setQuantity('');\n      setId('');\n      setItemName('');\n    }\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"Enter item details\"), React.createElement(FormInput, {\n    labelValue: id,\n    onChangeText: function onChangeText(id) {\n      setId(id);\n    },\n    placeholder: \"Item ID\",\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }), React.createElement(FormInput, {\n    labelValue: name,\n    onChangeText: function onChangeText(name) {\n      setItemName(name);\n    },\n    placeholder: \"Item Name\",\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }), React.createElement(FormInput, {\n    labelValue: quantity,\n    onChangeText: function onChangeText(quantity) {\n      setQuantity(quantity);\n    },\n    placeholder: \"Item Quantity\",\n    keyboardType: \"numeric\",\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }), React.createElement(FormButton, {\n    buttonTitle: \"Add\",\n    onPress: itemHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    backgroundColor: Colors.primaryBackgroud,\n    padding: 30\n  }\n});\nexport default Scan;","map":{"version":3,"sources":["C:/Users/Dell/Documents/GitHub/Inventory-Manager/screens/Scan.js"],"names":["React","useState","useEffect","firebase","addItem","updateRec","Colors","Card","FormInput","FormButton","Scan","name","setItemName","quantity","setQuantity","id","setId","empId","setEmpId","empName","setEmpName","orgname","setOrgName","userId","auth","currentUser","uid","getUserInfo","firestore","collection","doc","get","docuser","exists","Alert","alert","dataObj","data","itemHandler","Keyboard","dismiss","styles","screen","StyleSheet","create","flex","backgroundColor","primaryBackgroud","padding"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;;AAEA,OAAOC,QAAP,MAAqB,UAArB;AAEA,SAASC,OAAT,EAAkBC,SAAlB;AACA,SAASC,MAAT;AACA,OAAOC,IAAP;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf,kBAA4BT,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOU,IAAP;AAAA,MAAaC,WAAb;;AACA,mBAAgCX,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOY,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAoBb,QAAQ,CAAC,EAAD,CAA5B;AAAA;AAAA,MAAOc,EAAP;AAAA,MAAWC,KAAX;;AACA,mBAA0Bf,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOgB,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA8BjB,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOkB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,oBAA8BnB,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOoB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,MAAM,GAAGpB,QAAQ,CAACqB,IAAT,GAAgBC,WAAhB,CAA4BC,GAA3C;AAEAxB,EAAAA,SAAS,CAAC,YAAM;AACZ,aAAeyB,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwBxB,QAAQ,CAACyB,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,EAA4CC,GAA5C,CAAgDP,MAAhD,EAAwDQ,GAAxD,EADxB;;AAAA;AACQC,cAAAA,OADR;;AAEI,kBAAI,CAACA,OAAO,CAACC,MAAb,EAAoB;AAChBC,gBAAAA,KAAK,CAACC,KAAN,CAAY,qBAAZ;AACH,eAFD,MAGK;AACGC,gBAAAA,OADH,GACaJ,OAAO,CAACK,IAAR,EADb;AAEDnB,gBAAAA,QAAQ,CAACK,MAAD,CAAR;AACAH,gBAAAA,UAAU,CAACgB,OAAO,CAACzB,IAAT,CAAV;AACAW,gBAAAA,UAAU,CAACc,OAAO,CAACf,OAAT,CAAV;AACH;;AAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYAM,IAAAA,WAAW;AACd,GAdQ,CAAT;;AAgBA,MAAMW,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,QAAG,CAAC3B,IAAJ,EAAU;AACNuB,MAAAA,KAAK,CAACC,KAAN,CAAY,qBAAZ;AACH,KAFD,MAGK,IAAG,CAACpB,EAAJ,EAAQ;AACTmB,MAAAA,KAAK,CAACC,KAAN,CAAY,eAAZ;AACH,KAFI,MAGA,IAAG,CAACtB,QAAJ,EAAc;AACfqB,MAAAA,KAAK,CAACC,KAAN,CAAY,oBAAZ;AACH,KAFI,MAGD;AACA/B,MAAAA,OAAO,CAACW,EAAD,EAAKJ,IAAL,EAAWE,QAAX,EAAqBQ,OAArB,CAAP;AACAhB,MAAAA,SAAS,CAACU,EAAD,EAAKJ,IAAL,EAAWE,QAAX,EAAqB,IAArB,EAA2BM,OAA3B,EAAoCF,KAApC,EAA2CI,OAA3C,CAAT;AACAP,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,KAAK,CAAC,EAAD,CAAL;AACAJ,MAAAA,WAAW,CAAC,EAAD,CAAX;AACH;AACJ,GAjBD;;AAmBA,SACQ,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAE2B,QAAQ,CAACC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAE3B,EAAvB;AAA2B,IAAA,YAAY,EAAE,sBAACA,EAAD,EAAQ;AAACC,MAAAA,KAAK,CAACD,EAAD,CAAL;AAAU,KAA5D;AAA8D,IAAA,WAAW,EAAC,SAA1E;AAAoF,IAAA,WAAW,EAAE,KAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAEJ,IAAvB;AAA6B,IAAA,YAAY,EAAE,sBAACA,IAAD,EAAU;AAACC,MAAAA,WAAW,CAACD,IAAD,CAAX;AAAkB,KAAxE;AAA0E,IAAA,WAAW,EAAC,WAAtF;AAAkG,IAAA,WAAW,EAAE,KAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAEE,QAAvB;AAAiC,IAAA,YAAY,EAAE,sBAACA,QAAD,EAAc;AAACC,MAAAA,WAAW,CAACD,QAAD,CAAX;AAAsB,KAApF;AAAsF,IAAA,WAAW,EAAC,eAAlG;AAAkH,IAAA,YAAY,EAAC,SAA/H;AAAyI,IAAA,WAAW,EAAE,KAAtJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAC,KAAxB;AAA8B,IAAA,OAAO,EAAEyB,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CADJ,CADR;AAaH,CAzDD;;AA2DA,IAAMG,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,MAAM,EAAE;AACJG,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,eAAe,EAAExC,MAAM,CAACyC,gBAFpB;AAGJC,IAAAA,OAAO,EAAE;AAHL;AADqB,CAAlB,CAAf;AAQA,eAAetC,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { View, Text, StyleSheet, Alert, Keyboard, TouchableWithoutFeedback} from 'react-native';\r\nimport firebase from 'firebase';\r\n\r\nimport { addItem, updateRec } from '../DataBaseUpdate';\r\nimport { Colors } from '../assets/Colors';\r\nimport Card from '../components/Card';\r\nimport FormInput from '../components/FormInput';\r\nimport FormButton from '../components/FormButton'\r\n\r\nconst Scan = () => {\r\n    const [name, setItemName] = useState('');\r\n    const [quantity, setQuantity] = useState('');\r\n    const [id, setId] = useState('');\r\n    const [empId, setEmpId] = useState('');\r\n    const [empName, setEmpName] = useState('');\r\n    const [orgname, setOrgName] = useState('');\r\n    const userId = firebase.auth().currentUser.uid;\r\n\r\n    useEffect(() => {\r\n        async function getUserInfo(){\r\n            let docuser = await firebase.firestore().collection('allusers').doc(userId).get();\r\n            if (!docuser.exists){\r\n                Alert.alert('No user data found!')\r\n            } \r\n            else {\r\n                let dataObj = docuser.data();\r\n                setEmpId(userId);\r\n                setEmpName(dataObj.name);\r\n                setOrgName(dataObj.orgname);\r\n            }\r\n        }\r\n        getUserInfo();\r\n    })\r\n\r\n    const itemHandler = () => {\r\n        if(!name) {\r\n            Alert.alert('Enter the item name');\r\n        }\r\n        else if(!id) {\r\n            Alert.alert('Enter item id');\r\n        }\r\n        else if(!quantity) {\r\n            Alert.alert('Enter the quantity');\r\n        }\r\n        else{\r\n            addItem(id, name, quantity, orgname);\r\n            updateRec(id, name, quantity, 'in', empName, empId, orgname);\r\n            setQuantity('');\r\n            setId('');\r\n            setItemName('');\r\n        }\r\n    };\r\n\r\n    return (\r\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n                <View style={styles.screen}>\r\n                    <Card >\r\n                        <Text>Enter item details</Text>\r\n                        <FormInput labelValue={id} onChangeText={(id) => {setId(id)}} placeholder='Item ID' autoCorrect={false}/>\r\n                        <FormInput labelValue={name} onChangeText={(name) => {setItemName(name)}} placeholder='Item Name' autoCorrect={false}/>\r\n                        <FormInput labelValue={quantity} onChangeText={(quantity) => {setQuantity(quantity)}} placeholder='Item Quantity' keyboardType='numeric' autoCorrect={false}/>\r\n                        <FormButton buttonTitle='Add' onPress={itemHandler}/>\r\n                    </Card>\r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        backgroundColor: Colors.primaryBackgroud,\r\n        padding: 30\r\n    }\r\n});\r\n\r\nexport default Scan;"]},"metadata":{},"sourceType":"module"}