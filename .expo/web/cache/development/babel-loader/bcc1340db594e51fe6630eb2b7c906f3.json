{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\GitHub\\\\Inventory-Manager\\\\screens\\\\SignupEmployeeScreen.js\";\n\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { registrationEmployee } from \"../Authentication\";\nimport { Colors } from \"../assets/Colors\";\nimport FormButton from \"../components/FormButton\";\nimport FormInput from \"../components/FormInput\";\n\nvar SignUpEmployee = function SignUpEmployee(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      phone = _useState4[0],\n      setPhone = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      orgcode = _useState6[0],\n      setOrgCode = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setPassword = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      confirmPassword = _useState12[0],\n      setConfirmPassword = _useState12[1];\n\n  var signupHandler = function signupHandler() {\n    if (!name) {\n      Alert.alert('Name required!');\n    } else if (!phone) {\n      Alert.alert('Enter a phone number');\n    } else if (!orgcode) {\n      Alert.alert('Enter a valid code');\n    } else if (!email) {\n      Alert.alert('Email cannot be blank');\n    } else if (!password) {\n      Alert.alert('Enter a valid password!');\n    } else if (!confirmPassword) {\n      Alert.alert('Enter a valid password');\n    } else if (password !== confirmPassword) {\n      Alert.alert('Password does not match');\n    } else {\n      registrationEmployee(email, password, name, phone, orgcode);\n      setName('');\n      setPhone('');\n      setOrgCode('');\n      setEmail('');\n      setPassword('');\n      setConfirmPassword('');\n      Alert.alert('Sign up successful. Please login');\n      navigation.replace('Login');\n    }\n  };\n\n  return React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    style: styles.background,\n    source: require(\"../assets/forgot.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"Create Employee Account\"), React.createElement(FormInput, {\n    labelValue: name,\n    onChangeText: function onChangeText(username) {\n      setName(username);\n    },\n    placeholder: \"Name\",\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }), React.createElement(FormInput, {\n    labelValue: phone,\n    onChangeText: function onChangeText(phone) {\n      setPhone(phone);\n    },\n    placeholder: \"Phone Number\",\n    keyboardType: \"numeric\",\n    autoCorrect: false,\n    maxLength: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }), React.createElement(FormInput, {\n    labelValue: orgcode,\n    onChangeText: function onChangeText(orgcode) {\n      setOrgCode(orgcode);\n    },\n    placeholder: \"Organization Code\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }), React.createElement(FormInput, {\n    labelValue: email,\n    onChangeText: function onChangeText(userEmail) {\n      setEmail(userEmail);\n    },\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }), React.createElement(FormInput, {\n    labelValue: password,\n    onChangeText: function onChangeText(userPassword) {\n      setPassword(userPassword);\n    },\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }), React.createElement(FormInput, {\n    labelValue: confirmPassword,\n    onChangeText: function onChangeText(userPassword) {\n      setConfirmPassword(userPassword);\n    },\n    placeholder: \"Confirm Password\",\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }), React.createElement(FormButton, {\n    buttonTitle: \"Sign Up\",\n    onPress: signupHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.navButton,\n    onPress: function onPress() {\n      return navigation.push('Login');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.navButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, \"Already registered? Log in\"))))))));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    backgroundColor: Colors.primaryBackgroud,\n    paddingTop: 40\n  },\n  background: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  container: {\n    backgroundColor: Colors.primaryBackgroud,\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n    marginBottom: '60%'\n  },\n  text: {\n    fontSize: 20,\n    marginBottom: 10,\n    color: Colors.primaryText,\n    fontWeight: 'bold'\n  },\n  navButton: {\n    marginTop: 15\n  },\n  navButtonText: {\n    fontSize: 18,\n    fontWeight: '500',\n    color: Colors.primaryText\n  },\n  textPrivate: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginVertical: 35,\n    justifyContent: 'center'\n  },\n  colorTextPrivate: {\n    fontSize: 14,\n    fontWeight: '400',\n    color: 'grey'\n  }\n});\nexport default SignUpEmployee;","map":{"version":3,"sources":["C:/Users/Dell/Documents/GitHub/Inventory-Manager/screens/SignupEmployeeScreen.js"],"names":["React","useState","registrationEmployee","Colors","FormButton","FormInput","SignUpEmployee","navigation","name","setName","phone","setPhone","orgcode","setOrgCode","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","signupHandler","Alert","alert","replace","styles","background","require","Keyboard","dismiss","screen","container","text","username","userEmail","userPassword","navButton","push","navButtonText","StyleSheet","create","flex","backgroundColor","primaryBackgroud","paddingTop","justifyContent","alignItems","padding","marginBottom","fontSize","color","primaryText","fontWeight","marginTop","textPrivate","flexDirection","flexWrap","marginVertical","colorTextPrivate"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {ImageBackground,ScrollView, Text, View, StyleSheet, TouchableOpacity, TouchableWithoutFeedback, Keyboard, Alert } from 'react-native';\r\n\r\nimport { registrationEmployee } from '../Authentication';\r\nimport { Colors } from '../assets/Colors';\r\nimport FormButton from '../components/FormButton';\r\nimport FormInput from '../components/FormInput';\r\n\r\nconst SignUpEmployee = ({navigation}) => {\r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [orgcode, setOrgCode] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const signupHandler = () => {\r\n        if(!name){\r\n            Alert.alert('Name required!');\r\n        }\r\n        else if(!phone){\r\n            Alert.alert('Enter a phone number');\r\n        }\r\n        else if(!orgcode){\r\n            Alert.alert('Enter a valid code');\r\n        }\r\n        else if(!email){\r\n            Alert.alert('Email cannot be blank');\r\n        }\r\n        else if(!password){\r\n            Alert.alert('Enter a valid password!');\r\n        }\r\n        else if(!confirmPassword){\r\n            Alert.alert('Enter a valid password');\r\n        }\r\n        else if(password !== confirmPassword){\r\n            Alert.alert('Password does not match');\r\n        }\r\n        else{\r\n            registrationEmployee(email, password, name, phone, orgcode);\r\n            setName('');\r\n            setPhone('');\r\n            setOrgCode('');\r\n            setEmail('');\r\n            setPassword('');\r\n            setConfirmPassword('');\r\n            Alert.alert('Sign up successful. Please login');\r\n            navigation.replace('Login');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n            <ImageBackground style={styles.background} source={require('../assets/forgot.png')}>  \r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n            <View style={styles.screen}>\r\n                <TouchableWithoutFeedback onPress={Keyboard.dismiss} >\r\n                    <View style={styles.container}>\r\n                        <Text style={styles.text}>Create Employee Account</Text>\r\n                        \r\n                        <FormInput labelValue={name} onChangeText={(username) => {setName(username)}} placeholder='Name' autoCapitalize='words' autoCorrect={false}/>\r\n\r\n                        <FormInput labelValue={phone} onChangeText={(phone) => {setPhone(phone)}} placeholder='Phone Number' keyboardType='numeric' autoCorrect={false} maxLength={10}/>\r\n\r\n                        <FormInput labelValue={orgcode} onChangeText={(orgcode) => {setOrgCode(orgcode)}} placeholder='Organization Code' autoCapitalize='none' autoCorrect={false}/>\r\n\r\n                        <FormInput labelValue={email} onChangeText={(userEmail) => {setEmail(userEmail)}} placeholder='Email' keyboardType='email-address' autoCapitalize='none' autoCorrect={false}/>\r\n\r\n                        <FormInput labelValue={password} onChangeText={(userPassword) => {setPassword(userPassword)}} placeholder='Password' secureTextEntry={true}/>\r\n\r\n                        <FormInput labelValue={confirmPassword} onChangeText={(userPassword) => {setConfirmPassword(userPassword)}} placeholder='Confirm Password' secureTextEntry={true}/>\r\n\r\n                        <FormButton buttonTitle='Sign Up' onPress={signupHandler}/>\r\n\r\n                        <TouchableOpacity style={styles.navButton} onPress={() => navigation.push('Login')}>\r\n                            <Text style={styles.navButtonText}>Already registered? Log in</Text>\r\n                        </TouchableOpacity>\r\n\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n        </ImageBackground>\r\n        </ScrollView>\r\n        \r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        backgroundColor: Colors.primaryBackgroud,\r\n        paddingTop: 40\r\n    },\r\n    background:{\r\n        flex:1,\r\n        justifyContent:'flex-end',\r\n        alignItems:'center',\r\n    },\r\n    container: {\r\n        backgroundColor: Colors.primaryBackgroud,\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 20,\r\n        marginBottom: '60%'\r\n    },\r\n\r\n    text: {\r\n        fontSize: 20,\r\n        marginBottom: 10,\r\n        color: Colors.primaryText,\r\n        fontWeight: 'bold'\r\n    },\r\n\r\n    navButton: {\r\n        marginTop: 15\r\n    },\r\n\r\n    navButtonText: {\r\n        fontSize: 18,\r\n        fontWeight: '500',\r\n        color: Colors.primaryText\r\n    },\r\n\r\n    textPrivate: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        marginVertical: 35,\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    colorTextPrivate: {\r\n        fontSize: 14,\r\n        fontWeight: '400',\r\n        color: 'grey'\r\n    }\r\n});\r\n\r\nexport default SignUpEmployee;"]},"metadata":{},"sourceType":"module"}