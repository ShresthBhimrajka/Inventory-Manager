{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\GitHub\\\\Inventory-Manager\\\\screens\\\\SignUpScreen.js\";\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { registrationAdmin } from \"../Authentication\";\nimport { Colors } from \"../assets/Colors\";\nimport FormButton from \"../components/FormButton\";\nimport FormInput from \"../components/FormInput\";\n\nvar SignUp = function SignUp(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      orgName = _useState2[0],\n      setOrgName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setPassword = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      confirmPassword = _useState12[0],\n      setConfirmPassword = _useState12[1];\n\n  var signupHandler = function signupHandler() {\n    if (!orgName) {\n      Alert.alert('Organization Name Required');\n    } else if (!name) {\n      Alert.alert('Name required!');\n    } else if (!phone) {\n      Alert.alert('Enter a phone number');\n    } else if (!email) {\n      Alert.alert('Email cannot be blank');\n    } else if (!password) {\n      Alert.alert('Enter a valid password!');\n    } else if (!confirmPassword) {\n      Alert.alert('Enter a valid password');\n    } else if (password !== confirmPassword) {\n      Alert.alert('Password does not match');\n    } else {\n      registrationAdmin(orgName, email, password, phone, name);\n      setOrgName('');\n      setName('');\n      setPhone('');\n      setEmail('');\n      setPassword('');\n      setConfirmPassword('');\n      Alert.alert('Sign up successful. Please login');\n      navigation.replace('Login');\n    }\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, \"Create Admin Account\"), React.createElement(FormInput, {\n    labelValue: orgName,\n    onChangeText: function onChangeText(orgName) {\n      setOrgName(orgName);\n    },\n    placeholder: \"Organization Name\",\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }), React.createElement(FormInput, {\n    labelValue: name,\n    onChangeText: function onChangeText(username) {\n      setName(username);\n    },\n    placeholder: \"Admin Name\",\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }), React.createElement(FormInput, {\n    labelValue: phone,\n    onChangeText: function onChangeText(phone) {\n      setPhone(phone);\n    },\n    placeholder: \"Admin Phone number\",\n    keyboardType: \"numeric\",\n    autoCorrect: false,\n    maxLength: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }), React.createElement(FormInput, {\n    labelValue: email,\n    onChangeText: function onChangeText(userEmail) {\n      setEmail(userEmail);\n    },\n    placeholder: \"Admin Email\",\n    keyboardType: \"email-address\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }), React.createElement(FormInput, {\n    labelValue: password,\n    onChangeText: function onChangeText(userPassword) {\n      setPassword(userPassword);\n    },\n    placeholder: \"Admin Password\",\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }), React.createElement(FormInput, {\n    labelValue: confirmPassword,\n    onChangeText: function onChangeText(userPassword) {\n      setConfirmPassword(userPassword);\n    },\n    placeholder: \"Confirm Password\",\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }), React.createElement(FormButton, {\n    buttonTitle: \"Sign Up\",\n    onPress: signupHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.navButton,\n    onPress: function onPress() {\n      return navigation.push('Login');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.navButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, \"Already registered? Log in\"))))));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    backgroundColor: Colors.primaryBackgroud\n  },\n  container: {\n    backgroundColor: Colors.primaryBackgroud,\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n    marginBottom: '40%'\n  },\n  text: {\n    fontSize: 20,\n    marginBottom: 10,\n    color: Colors.primaryText,\n    fontWeight: 'bold'\n  },\n  navButton: {\n    marginTop: 15\n  },\n  navButtonText: {\n    fontSize: 18,\n    fontWeight: '500',\n    color: Colors.primaryText\n  },\n  textPrivate: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginVertical: 35,\n    justifyContent: 'center'\n  },\n  colorTextPrivate: {\n    fontSize: 14,\n    fontWeight: '400',\n    color: 'grey'\n  }\n});\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/Dell/Documents/GitHub/Inventory-Manager/screens/SignUpScreen.js"],"names":["React","useState","registrationAdmin","Colors","FormButton","FormInput","SignUp","navigation","orgName","setOrgName","name","setName","phone","setPhone","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","signupHandler","Alert","alert","replace","Keyboard","dismiss","styles","screen","container","text","username","userEmail","userPassword","navButton","push","navButtonText","StyleSheet","create","flex","backgroundColor","primaryBackgroud","alignItems","justifyContent","padding","marginBottom","fontSize","color","primaryText","fontWeight","marginTop","textPrivate","flexDirection","flexWrap","marginVertical","colorTextPrivate"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { Text, View, StyleSheet, TouchableOpacity, TouchableWithoutFeedback, Keyboard, Alert } from 'react-native';\r\n\r\nimport { registrationAdmin } from '../Authentication';\r\nimport { Colors } from '../assets/Colors';\r\nimport FormButton from '../components/FormButton';\r\nimport FormInput from '../components/FormInput';\r\n\r\nconst SignUp = ({navigation}) => {\r\n    const [orgName, setOrgName] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const signupHandler = () => {\r\n        if(!orgName){\r\n            Alert.alert('Organization Name Required');\r\n        }\r\n        else if(!name){\r\n            Alert.alert('Name required!');\r\n        }\r\n        else if(!phone){\r\n            Alert.alert('Enter a phone number');\r\n        }\r\n        else if(!email){\r\n            Alert.alert('Email cannot be blank');\r\n        }\r\n        else if(!password){\r\n            Alert.alert('Enter a valid password!');\r\n        }\r\n        else if(!confirmPassword){\r\n            Alert.alert('Enter a valid password');\r\n        }\r\n        else if(password !== confirmPassword){\r\n            Alert.alert('Password does not match');\r\n        }\r\n        else{\r\n            registrationAdmin(orgName, email, password, phone, name);\r\n            setOrgName('');\r\n            setName('');\r\n            setPhone('');\r\n            setEmail('');\r\n            setPassword('');\r\n            setConfirmPassword('');\r\n            Alert.alert('Sign up successful. Please login');\r\n            navigation.replace('Login');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n            <View style={styles.screen}>\r\n                <TouchableWithoutFeedback onPress={Keyboard.dismiss} >\r\n                    <View style={styles.container}>\r\n                        <Text style={styles.text}>Create Admin Account</Text>\r\n\r\n                        <FormInput labelValue={orgName} onChangeText={(orgName) => {setOrgName(orgName)}} placeholder='Organization Name' autoCorrect={false}/>\r\n                        \r\n                        <FormInput labelValue={name} onChangeText={(username) => {setName(username)}} placeholder='Admin Name' autoCapitalize='words' autoCorrect={false}/>\r\n\r\n                        <FormInput labelValue={phone} onChangeText={(phone) => {setPhone(phone)}} placeholder='Admin Phone number' keyboardType='numeric' autoCorrect={false} maxLength={10}/>\r\n\r\n                        <FormInput labelValue={email} onChangeText={(userEmail) => {setEmail(userEmail)}} placeholder='Admin Email' keyboardType='email-address' autoCapitalize='none' autoCorrect={false}/>\r\n\r\n                        <FormInput labelValue={password} onChangeText={(userPassword) => {setPassword(userPassword)}} placeholder='Admin Password' secureTextEntry={true}/>\r\n\r\n                        <FormInput labelValue={confirmPassword} onChangeText={(userPassword) => {setConfirmPassword(userPassword)}} placeholder='Confirm Password' secureTextEntry={true}/>\r\n\r\n                        <FormButton buttonTitle='Sign Up' onPress={signupHandler}/>\r\n\r\n                        <TouchableOpacity style={styles.navButton} onPress={() => navigation.push('Login')}>\r\n                            <Text style={styles.navButtonText}>Already registered? Log in</Text>\r\n                        </TouchableOpacity>\r\n\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n        \r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        backgroundColor: Colors.primaryBackgroud,\r\n    },\r\n\r\n    container: {\r\n        backgroundColor: Colors.primaryBackgroud,\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 20,\r\n        marginBottom: '40%'\r\n    },\r\n\r\n    text: {\r\n        fontSize: 20,\r\n        marginBottom: 10,\r\n        color: Colors.primaryText,\r\n        fontWeight: 'bold'\r\n    },\r\n\r\n    navButton: {\r\n        marginTop: 15\r\n    },\r\n\r\n    navButtonText: {\r\n        fontSize: 18,\r\n        fontWeight: '500',\r\n        color: Colors.primaryText\r\n    },\r\n\r\n    textPrivate: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        marginVertical: 35,\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    colorTextPrivate: {\r\n        fontSize: 14,\r\n        fontWeight: '400',\r\n        color: 'grey'\r\n    }\r\n});\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}