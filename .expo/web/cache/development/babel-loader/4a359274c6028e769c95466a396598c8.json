{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\GitHub\\\\Inventory-Manager\\\\screens\\\\HomeScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport firebase from 'firebase';\nimport { Colors } from \"../assets/Colors\";\nimport Card from \"../components/Card\";\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      access = _useState2[0],\n      setAccess = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      orgname = _useState4[0],\n      setOrgName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      empName = _useState6[0],\n      setEmpName = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      empId = _useState8[0],\n      setEmpId = _useState8[1];\n\n  var userId = firebase.auth().currentUser.uid;\n  useEffect(function () {\n    function getUserInfo() {\n      var docuser, dataObj;\n      return _regeneratorRuntime.async(function getUserInfo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(firebase.firestore().collection('allusers').doc(userId).get());\n\n            case 2:\n              docuser = _context.sent;\n\n              if (!docuser.exists) {\n                Alert.alert('No user data found!');\n              } else {\n                dataObj = docuser.data();\n                setAccess(dataObj.access);\n                setOrgName(dataObj.orgname);\n                setEmpName(dataObj.name);\n                setEmpId(userId);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getUserInfo();\n  });\n  var admin = React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.touchableContainerAdmin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.9,\n    onPress: function onPress() {\n      return navigation.push('Inventory', {\n        orgname: orgname,\n        access: access,\n        empId: empId,\n        empName: empName\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, React.createElement(Card, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \"Inventory\"))), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.9,\n    onPress: function onPress() {\n      return navigation.push('Records', {\n        orgname: orgname\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, React.createElement(Card, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \"Records\"))), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.9,\n    onPress: function onPress() {\n      return navigation.push('Status');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, React.createElement(Card, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, \"Status\")))));\n  var emp = React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.touchableContainerEmp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.9,\n    onPress: function onPress() {\n      return navigation.push('Inventory', {\n        orgname: orgname,\n        access: access,\n        empName: empName,\n        empId: empId\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, React.createElement(Card, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Inventory\"))), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.9,\n    onPress: function onPress() {\n      return navigation.push('Status');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, React.createElement(Card, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Status\")))));\n  return access == 'admin' ? admin : emp;\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: Colors.primaryBackgroud\n  },\n  touchableContainerAdmin: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginTop: 30,\n    marginBottom: '65%'\n  },\n  touchableContainerEmp: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginTop: 30,\n    marginBottom: '90%'\n  },\n  buttonContainer: {\n    height: 100,\n    width: 300,\n    maxWidth: '70%',\n    backgroundColor: Colors.homeTouchable\n  },\n  buttonText: {\n    fontSize: 22,\n    color: 'black'\n  },\n  navButton: {\n    width: 30,\n    height: 30\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["C:/Users/Dell/Documents/GitHub/Inventory-Manager/screens/HomeScreen.js"],"names":["React","useState","useEffect","firebase","Colors","Card","HomeScreen","navigation","access","setAccess","orgname","setOrgName","empName","setEmpName","empId","setEmpId","userId","auth","currentUser","uid","getUserInfo","firestore","collection","doc","get","docuser","exists","Alert","alert","dataObj","data","name","admin","styles","screen","touchableContainerAdmin","push","buttonContainer","buttonText","emp","touchableContainerEmp","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","primaryBackgroud","marginTop","marginBottom","height","width","maxWidth","homeTouchable","fontSize","color","navButton"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { StyleSheet, View, Text, TouchableOpacity, Alert} from 'react-native';\r\nimport firebase from 'firebase';\r\n\r\nimport { Colors } from '../assets/Colors';\r\nimport Card from '../components/Card';\r\n\r\nconst HomeScreen = ({navigation}) => {\r\n\r\n    const [access, setAccess] = useState('');\r\n    const [orgname, setOrgName] = useState('');\r\n    const [empName, setEmpName] = useState('');\r\n    const [empId, setEmpId] = useState('');\r\n    let userId = firebase.auth().currentUser.uid;  \r\n\r\n    useEffect(() => {\r\n        async function getUserInfo(){\r\n            let docuser = await firebase.firestore().collection('allusers').doc(userId).get();\r\n            if (!docuser.exists){\r\n                Alert.alert('No user data found!')\r\n            } \r\n            else {\r\n                let dataObj = docuser.data();\r\n                setAccess(dataObj.access);\r\n                setOrgName(dataObj.orgname);\r\n                setEmpName(dataObj.name);\r\n                setEmpId(userId);\r\n            }\r\n        }\r\n        getUserInfo();\r\n    })\r\n\r\n    const admin = (\r\n      <View style={styles.screen}>\r\n        <View style={styles.touchableContainerAdmin}>\r\n          <TouchableOpacity activeOpacity={0.9} onPress={() => navigation.push('Inventory', {orgname: orgname, access: access, empId: empId, empName: empName})}>\r\n            <Card style={styles.buttonContainer}>\r\n              <Text style={styles.buttonText}>Inventory</Text>\r\n            </Card> \r\n          </TouchableOpacity> \r\n\r\n          <TouchableOpacity activeOpacity={0.9} onPress={() => navigation.push('Records', {orgname: orgname})}>\r\n            <Card style={styles.buttonContainer}>\r\n              <Text style={styles.buttonText}>Records</Text>\r\n            </Card>\r\n          </TouchableOpacity> \r\n\r\n          <TouchableOpacity activeOpacity={0.9} onPress={() => navigation.push('Status')}>\r\n            <Card style={styles.buttonContainer}>\r\n              <Text style={styles.buttonText}>Status</Text>\r\n            </Card>\r\n          </TouchableOpacity> \r\n        </View>\r\n      </View>\r\n    );\r\n\r\n    const emp = (\r\n      <View style={styles.screen}>\r\n        <View style={styles.touchableContainerEmp}>\r\n            <TouchableOpacity activeOpacity={0.9} onPress={() => navigation.push('Inventory', {orgname: orgname, access: access, empName: empName, empId: empId})}>\r\n              <Card style={styles.buttonContainer}>\r\n                <Text style={styles.buttonText}>Inventory</Text>\r\n              </Card>\r\n            </TouchableOpacity> \r\n\r\n            <TouchableOpacity activeOpacity={0.9} onPress={() => navigation.push('Status')}>\r\n              <Card style={styles.buttonContainer}>\r\n                <Text style={styles.buttonText}>Status</Text>\r\n              </Card>\r\n            </TouchableOpacity> \r\n        </View>\r\n      </View>\r\n    );\r\n\r\n    return (access == 'admin' ? admin : emp)\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: Colors.primaryBackgroud\r\n    },\r\n\r\n    touchableContainerAdmin: {\r\n      flex: 1,\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      marginTop: 30,\r\n      marginBottom: '65%'\r\n    },\r\n\r\n    touchableContainerEmp: {\r\n      flex: 1,\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      marginTop: 30,\r\n      marginBottom: '90%'\r\n    },\r\n  \r\n    buttonContainer: {\r\n      height: 100,\r\n      width: 300,\r\n      maxWidth: '70%',\r\n      backgroundColor: Colors.homeTouchable\r\n    },\r\n  \r\n    buttonText: {\r\n      fontSize: 22,\r\n      color: 'black'\r\n    },\r\n\r\n    navButton: {\r\n      width: 30,\r\n      height: 30\r\n    }\r\n});\r\n\r\nexport default HomeScreen;"]},"metadata":{},"sourceType":"module"}