{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\GitHub\\\\Inventory-Manager\\\\screens\\\\ResetPasswordScreen.js\";\n\nimport React, { useState } from \"react\";\nimport { Imagebackground } from \"react-native-web/dist/index\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FormInput from \"../components/FormInput\";\nimport FormButton from \"../components/FormButton\";\nimport { resetPassword } from \"../Authentication\";\nimport { Colors } from \"../assets/Colors\";\n\nvar ResetPasswordScreen = function ResetPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var mailHandler = function mailHandler() {\n    if (!email) {\n      Alert.alert('Enter a valid email');\n    } else {\n      resetPassword(email);\n      setEmail('');\n      navigation.push('Login');\n    }\n  };\n\n  return React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    style: styles.background,\n    source: require(\"../assets/forgot.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    adjustsFontSizeToFit: true,\n    numberOfLines: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \"Enter your registered mail id to recieve password reset link\"), React.createElement(FormInput, {\n    labelValue: email,\n    onChangeText: function onChangeText(userEmail) {\n      setEmail(userEmail);\n    },\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }), React.createElement(FormButton, {\n    buttonTitle: \"Send link\",\n    onPress: mailHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.backButton,\n    onPress: function onPress() {\n      return navigation.push('Login');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.navButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \"Back to login\")))))));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1\n  },\n  background: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1,\n    alignContent: 'center',\n    justifyContent: 'space-between',\n    padding: 30,\n    marginTop: '50%',\n    marginBottom: '60%'\n  },\n  text: {\n    color: Colors.primaryText,\n    fontSize: 20,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  backButton: {\n    marginVertical: 20\n  },\n  navButtonText: {\n    fontSize: 18,\n    fontWeight: '500',\n    textAlign: 'center',\n    color: Colors.primaryText\n  }\n});\nexport default ResetPasswordScreen;","map":{"version":3,"sources":["C:/Users/Dell/Documents/GitHub/Inventory-Manager/screens/ResetPasswordScreen.js"],"names":["React","useState","Imagebackground","FormInput","FormButton","resetPassword","Colors","ResetPasswordScreen","navigation","email","setEmail","mailHandler","Alert","alert","push","styles","background","require","screen","Keyboard","dismiss","container","text","userEmail","backButton","navButtonText","StyleSheet","create","flex","justifyContent","alignItems","alignContent","padding","marginTop","marginBottom","color","primaryText","fontSize","textAlign","fontWeight","marginVertical"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Imagebackground, ScrollView, StyleSheet, View, Text, TouchableWithoutFeedback, Keyboard, TouchableOpacity, Alert} from \"react-native\";\r\n\r\nimport FormInput from '../components/FormInput';\r\nimport FormButton from '../components/FormButton';\r\nimport { resetPassword } from \"../Authentication\";\r\nimport { Colors } from \"../assets/Colors\";\r\n\r\nconst ResetPasswordScreen = ({navigation}) => {\r\n    const [email, setEmail] = useState('');\r\n\r\n    const mailHandler = () => {\r\n        if(!email){\r\n            Alert.alert('Enter a valid email');\r\n        }\r\n        else{\r\n            resetPassword(email);\r\n            setEmail('');\r\n            navigation.push('Login');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n            <ImageBackground style={styles.background} source={require('../assets/forgot.png')}>            \r\n        <View style={styles.screen}>\r\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.text} adjustsFontSizeToFit numberOfLines={2} >Enter your registered mail id to recieve password reset link</Text>\r\n                    <FormInput labelValue={email} onChangeText={(userEmail) => {setEmail(userEmail)}} placeholder='Email' keyboardType='email-address' autoCapitalize='none' autoCorrect={false}/>\r\n                    <FormButton buttonTitle='Send link' onPress={mailHandler}/>\r\n                    <TouchableOpacity style={styles.backButton} onPress={() => navigation.push('Login')}>\r\n                        <Text style={styles.navButtonText}>Back to login</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n        </View>\r\n        </ImageBackground>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        \r\n    },\r\n    background:{\r\n        flex:1,\r\n        justifyContent:'flex-end',\r\n        alignItems:'center',\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        alignContent: 'center',\r\n        justifyContent: 'space-between',\r\n        \r\n        padding: 30,\r\n        marginTop: '50%',\r\n        marginBottom: '60%'\r\n    },\r\n\r\n    text: {\r\n        color: Colors.primaryText,\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold'\r\n    },\r\n\r\n    backButton: {\r\n        marginVertical: 20\r\n    },\r\n\r\n    navButtonText: {\r\n        fontSize: 18,\r\n        fontWeight: '500',\r\n        textAlign: 'center',\r\n        color: Colors.primaryText\r\n    }\r\n});\r\n\r\nexport default ResetPasswordScreen;"]},"metadata":{},"sourceType":"module"}