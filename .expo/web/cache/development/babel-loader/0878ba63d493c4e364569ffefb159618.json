{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\GitHub\\\\Inventory-Manager\\\\screens\\\\LoginScreen.js\";\n\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { signIn } from \"../Authentication\";\nimport FormButton from \"../components/FormButton\";\nimport FormInput from \"../components/FormInput\";\nimport { Colors } from \"../assets/Colors\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var loginHandler = function loginHandler() {\n    if (!email) {\n      Alert.alert('Enter a valid email');\n    } else if (!password) {\n      Alert.alert('Enter a valid password');\n    } else {\n      signIn(email, password);\n      setEmail('');\n      setPassword('');\n      navigation.push('Loading');\n    }\n  };\n\n  return React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    style: styles.background,\n    source: require(\"../assets/login.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../assets/vennto.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Vennto\"), React.createElement(FormInput, {\n    labelValue: email,\n    onChangeText: function onChangeText(userEmail) {\n      setEmail(userEmail);\n    },\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }), React.createElement(FormInput, {\n    labelValue: password,\n    onChangeText: function onChangeText(userPassword) {\n      setPassword(userPassword);\n    },\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), React.createElement(FormButton, {\n    buttonTitle: \"Sign In\",\n    onPress: loginHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.forgotButton,\n    onPress: function onPress() {\n      return navigation.push('ForgotPassword');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.navButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"Forgot Password\")), React.createElement(TouchableOpacity, {\n    style: styles.forgotButton,\n    onPress: function onPress() {\n      return navigation.push('SignupEmployee');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.navButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \"Create Account as an Employee\")), React.createElement(TouchableOpacity, {\n    style: styles.forgotButton,\n    onPress: function onPress() {\n      return navigation.push('SignupAdmin');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.navButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"Sign Up as an Organization and create Admin Account\")))))));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1\n  },\n  background: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  logo: {\n    width: 40,\n    height: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  text: {\n    fontSize: 20,\n    marginBottom: 10,\n    fontWeight: 'bold',\n    color: Colors.primaryText\n  },\n  navButton: {\n    marginTop: 15\n  },\n  forgotButton: {\n    marginVertical: 20\n  },\n  navButtonText: {\n    fontSize: 18,\n    fontWeight: '500',\n    textAlign: 'center',\n    color: Colors.primaryText\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["C:/Users/Dell/Documents/GitHub/Inventory-Manager/screens/LoginScreen.js"],"names":["React","useState","signIn","FormButton","FormInput","Colors","LoginScreen","navigation","email","setEmail","password","setPassword","loginHandler","Alert","alert","push","styles","background","require","screen","Keyboard","dismiss","container","logo","text","userEmail","userPassword","forgotButton","navButtonText","StyleSheet","create","flex","justifyContent","alignItems","width","height","padding","fontSize","marginBottom","fontWeight","color","primaryText","navButton","marginTop","marginVertical","textAlign"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {ImageBackground, View, Text,ScrollView,Image , TouchableOpacity, TouchableWithoutFeedback, StyleSheet, Keyboard, Alert } from 'react-native';\r\n\r\nimport { signIn } from '../Authentication';\r\nimport FormButton from '../components/FormButton';\r\nimport FormInput from '../components/FormInput';\r\nimport { Colors } from '../assets/Colors';\r\n\r\nconst LoginScreen = ({navigation}) => {\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n    const loginHandler = () => {\r\n        if(!email){\r\n            Alert.alert('Enter a valid email');\r\n        }\r\n        else if(!password){\r\n            Alert.alert('Enter a valid password');\r\n        }\r\n        else{\r\n            signIn(email, password);\r\n            setEmail('');\r\n            setPassword('');\r\n            navigation.push('Loading');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n            <ImageBackground style={styles.background} source={require('../assets/login.png')}>\r\n        <View style={styles.screen}>\r\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss} >\r\n                <View style={styles.container}>\r\n                    <Image style={styles.logo} source={require('../assets/vennto.png')}/>\r\n                    <Text style={styles.text}>Vennto</Text>\r\n\r\n                    <FormInput labelValue={email} onChangeText={(userEmail) => {setEmail(userEmail)}} placeholder='Email' keyboardType='email-address' autoCapitalize='none' autoCorrect={false}/>\r\n\r\n                    <FormInput labelValue={password} onChangeText={(userPassword) => {setPassword(userPassword)}} placeholder='Password' secureTextEntry={true}/>\r\n\r\n                    <FormButton buttonTitle='Sign In' onPress={loginHandler}/>\r\n                    \r\n                    <TouchableOpacity style={styles.forgotButton} onPress={() => navigation.push('ForgotPassword')}>\r\n                        <Text style={styles.navButtonText}>Forgot Password</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity style={styles.forgotButton} onPress={() => navigation.push('SignupEmployee')}>\r\n                        <Text style={styles.navButtonText}>Create Account as an Employee</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity style={styles.forgotButton} onPress={() => navigation.push('SignupAdmin')}>\r\n                        <Text style={styles.navButtonText}>Sign Up as an Organization and create Admin Account</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n        </View>\r\n        </ImageBackground>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n\r\n    },\r\n    background:{\r\n        flex:1,\r\n        justifyContent:'flex-end',\r\n        alignItems:'center',\r\n    },\r\n    logo:{\r\n        width:40,\r\n        height:20,\r\n        alignItems:'center',\r\n        justifyContent: 'center',\r\n    },\r\n    container: {\r\n        \r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 20,\r\n    },\r\n\r\n    text: {\r\n        fontSize: 20,\r\n        marginBottom: 10,\r\n        fontWeight: 'bold',\r\n        color: Colors.primaryText\r\n    },\r\n\r\n    navButton: {\r\n        marginTop: 15\r\n    },\r\n\r\n    forgotButton: {\r\n        marginVertical: 20\r\n    },\r\n\r\n    navButtonText: {\r\n        fontSize: 18,\r\n        fontWeight: '500',\r\n        textAlign: 'center',\r\n        color: Colors.primaryText\r\n    }\r\n});\r\n\r\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}