{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\GitHub\\\\Inventory-Manager\\\\screens\\\\InventoryScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport firebase from 'firebase';\nimport { Colors } from \"../assets/Colors\";\nimport Card from \"../components/Card\";\nimport { removeItem, updateInv } from \"../DataBaseUpdate\";\n\nvar admin = function admin(_ref) {\n  var item = _ref.item,\n      orgname = _ref.orgname,\n      empName = _ref.empName,\n      empId = _ref.empId;\n  return React.createElement(View, {\n    style: styles.removeButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return removeItem(item, orgname, empName, empId);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    adjustsFontSizeToFit: true,\n    numberOfLines: 1,\n    style: styles.remove,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, \"Remove Item\")));\n};\n\nvar emp = function emp(_ref2) {\n  var item = _ref2.item;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  });\n};\n\nvar InventoryScreen = function InventoryScreen(_ref3) {\n  var route = _ref3.route;\n  var orgname = route.params.orgname;\n  var access = route.params.access;\n  var empName = route.params.empName;\n  var empId = route.params.empId;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      invData = _useState2[0],\n      setInvData = _useState2[1];\n\n  useEffect(function () {\n    try {\n      var inv = firebase.firestore().collection('organizations').doc(orgname).collection('inventory').onSnapshot(function (querySnapshot) {\n        var data = [];\n        querySnapshot.forEach(function (documentSnapshot) {\n          data.push(_objectSpread(_objectSpread({}, documentSnapshot.data()), {}, {\n            key: documentSnapshot.id\n          }));\n        });\n        setInvData(data.sort(function (a, b) {\n          return a['name'] < b['name'] ? -1 : a['name'] > b['name'] ? 1 : 0;\n        }));\n      });\n      return function () {\n        return inv;\n      };\n    } catch (err) {\n      Alert.alert('Inventory Error !');\n    }\n  }, []);\n\n  var renderItem = function renderItem(_ref4) {\n    var item = _ref4.item;\n    return React.createElement(Card, {\n      style: styles.item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.card,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      adjustsFontSizeToFit: true,\n      numberOfLines: 1,\n      style: styles.cardText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"ID:   \", item.id), React.createElement(Text, {\n      adjustsFontSizeToFit: true,\n      numberOfLines: 1,\n      style: styles.cardText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"Name: \", item.name), React.createElement(Text, {\n      adjustsFontSizeToFit: true,\n      numberOfLines: 1,\n      style: styles.cardText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Quantity: \", item.quantity)), access == 'admin' ? admin({\n      item: item,\n      orgname: orgname,\n      empName: empName,\n      empId: empId\n    }) : emp({\n      item: item\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: invData,\n    renderItem: renderItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: Colors.primaryBackgroud,\n    padding: 10\n  },\n  item: {\n    flex: 1,\n    width: 300,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    paddingVertical: 10,\n    margin: '5%'\n  },\n  cardText: {\n    textAlign: 'left'\n  },\n  card: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    padding: 10\n  },\n  remove: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    color: 'red'\n  },\n  removeButton: {\n    paddingHorizontal: 80\n  }\n});\nexport default InventoryScreen;","map":{"version":3,"sources":["C:/Users/Dell/Documents/GitHub/Inventory-Manager/screens/InventoryScreen.js"],"names":["React","useState","useEffect","firebase","Colors","Card","removeItem","updateInv","admin","item","orgname","empName","empId","styles","removeButton","remove","emp","InventoryScreen","route","params","access","invData","setInvData","inv","firestore","collection","doc","onSnapshot","querySnapshot","data","forEach","documentSnapshot","push","key","id","sort","a","b","err","Alert","alert","renderItem","card","cardText","name","quantity","screen","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","primaryBackgroud","padding","width","paddingVertical","margin","textAlign","fontWeight","color","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { StyleSheet, View, Text, FlatList, Alert, TouchableOpacity } from 'react-native';\r\nimport firebase from 'firebase';\r\n\r\nimport { Colors } from '../assets/Colors';\r\nimport Card from '../components/Card';\r\nimport { removeItem, updateInv } from '../DataBaseUpdate';\r\n\r\nconst admin = ({item,orgname,empName,empId}) => {\r\n    return (\r\n        <View style={styles.removeButton}>\r\n            <TouchableOpacity onPress = {() => removeItem(item,orgname,empName,empId)}>\r\n                <Text adjustsFontSizeToFit numberOfLines={1} style={styles.remove}>Remove Item</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst emp = ({item}) => {\r\n    return (\r\n        <View></View>\r\n    );\r\n};\r\n\r\nconst InventoryScreen = ({route}) => {\r\n    const orgname = route.params.orgname;\r\n    const access = route.params.access;\r\n    const empName = route.params.empName;\r\n    const empId = route. params.empId;\r\n    const [invData, setInvData] = useState([]);\r\n\r\n    useEffect(() => {\r\n          try {  \r\n              const inv = firebase.firestore().collection('organizations').doc(orgname).collection('inventory').onSnapshot(querySnapshot => {\r\n                  const data = [];\r\n                  querySnapshot.forEach(documentSnapshot => {\r\n                      data.push({\r\n                          ...documentSnapshot.data(),\r\n                          key: documentSnapshot.id\r\n                      });\r\n                  });\r\n                  setInvData(data.sort(function(a,b) {\r\n                        return ((a['name'] < b['name']) ? -1 : ((a['name'] > b['name']) ? 1 : 0));\r\n                        }));\r\n              });\r\n              return () => inv;\r\n          } \r\n          catch (err) {\r\n              Alert.alert('Inventory Error !');\r\n          }\r\n    }, [])\r\n\r\n    const renderItem = ({item}) => (\r\n        <Card style={styles.item}>\r\n            <View style={styles.card}>\r\n                <Text adjustsFontSizeToFit numberOfLines={1} style={styles.cardText}>ID:   {item.id}</Text>\r\n                <Text adjustsFontSizeToFit numberOfLines={1} style={styles.cardText}>Name: {item.name}</Text>\r\n                <Text adjustsFontSizeToFit numberOfLines={1} style={styles.cardText}>Quantity: {item.quantity}</Text>\r\n            </View>\r\n            {access=='admin' ? admin({item,orgname,empName,empId}) : emp({item})}\r\n        </Card>\r\n    );\r\n\r\n    return (\r\n        <View style={styles.screen}>\r\n            <FlatList\r\n                data={invData}\r\n                renderItem={renderItem}/>   \r\n        </View>\r\n    ); \r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: Colors.primaryBackgroud,\r\n        padding: 10\r\n    },\r\n\r\n    item: {\r\n        flex: 1,\r\n        width: 300,\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        paddingVertical: 10,\r\n        margin: '5%'\r\n    },\r\n\r\n    cardText: {\r\n        textAlign: 'left',\r\n    },\r\n\r\n    card: {\r\n        flex: 1,\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        padding: 10\r\n    },\r\n\r\n    remove: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        color: 'red'\r\n    },\r\n\r\n    removeButton: {\r\n        paddingHorizontal: 80\r\n    }\r\n}); \r\n\r\nexport default InventoryScreen;"]},"metadata":{},"sourceType":"module"}