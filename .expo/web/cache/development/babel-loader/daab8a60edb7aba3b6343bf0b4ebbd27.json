{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from \"firebase\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nexport function removeItem(item, orgname, empName, empId) {\n  var d, yr, mon, date, hrs, min, mil, dt, recId, res;\n  return _regeneratorRuntime.async(function removeItem$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          d = new Date();\n          yr = new String(d.getFullYear());\n          mon = new String(1 + d.getMonth());\n          date = new String(d.getDate());\n          hrs = new String(d.getHours());\n          min = new String(d.getMinutes());\n\n          if (min == '0') {\n            min = '00';\n          }\n\n          mil = d.getTime().toString();\n          dt = date + '.' + mon + '.' + yr + ' - ' + hrs + ':' + min;\n          recId = mil + empId;\n          firebase.firestore().collection('organizations').doc(orgname).collection('records').doc(recId).set({\n            name: item.name,\n            id: item.id,\n            quantity: item.quantity,\n            inex: 'ex',\n            empid: empId,\n            empname: empName,\n            datetime: dt,\n            mil: mil\n          });\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection('organizations').doc(orgname).collection('inventory').doc(item.id).delete());\n\n        case 14:\n          res = _context.sent;\n\n          if (res) {\n            Alert.alert('Item successfully deleted');\n          }\n\n          _context.next = 21;\n          break;\n\n        case 18:\n          _context.prev = 18;\n          _context.t0 = _context[\"catch\"](0);\n          Alert.alert('There is something wrong !!!', _context.t0.message);\n\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 18]], Promise);\n}\nexport function addItem(id, name, quantity, orgname) {\n  var db, doc, q, data;\n  return _regeneratorRuntime.async(function addItem$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          db = firebase.firestore().collection('organizations').doc(orgname).collection('inventory').doc(id);\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(db.get());\n\n        case 4:\n          doc = _context2.sent;\n          q = parseInt(quantity);\n\n          if (doc.exists) {\n            data = doc.data();\n            q = q + parseInt(data.quantity);\n            db.set({\n              name: name,\n              id: id,\n              quantity: q.toString()\n            });\n          } else {\n            db.set({\n              name: name,\n              id: id,\n              quantity: q.toString()\n            });\n          }\n\n          _context2.next = 12;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          Alert.alert('There is something wrong !!!', _context2.t0.message);\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 9]], Promise);\n}\nexport function updateInv(item, quantity, orgname) {\n  var id, name;\n  return _regeneratorRuntime.async(function updateInv$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          try {\n            id = item.id;\n            name = item.name;\n            firebase.firestore().collection('organizations').doc(orgname).collection('inventory').doc(id).set({\n              id: id,\n              name: name,\n              quantity: quantity\n            });\n          } catch (err) {\n            Alert.alert('There is something !!!', err.message);\n          }\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function updateRec(id, name, quantity, inex, empName, empId, orgname) {\n  var d, yr, mon, date, hrs, min, mil, dt, recId;\n  return _regeneratorRuntime.async(function updateRec$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          try {\n            d = new Date();\n            yr = new String(d.getFullYear());\n            mon = new String(1 + d.getMonth());\n            date = new String(d.getDate());\n            hrs = new String(d.getHours());\n            min = new String(d.getMinutes());\n\n            if (min == '0') {\n              '00', _readOnlyError(\"min\");\n            }\n\n            mil = d.getTime().toString();\n            dt = date + '.' + mon + '.' + yr + ' - ' + hrs + ':' + min;\n            recId = mil + empId;\n            firebase.firestore().collection('organizations').doc(orgname).collection('records').doc(recId).set({\n              name: name,\n              id: id,\n              quantity: quantity,\n              inex: inex,\n              empid: empId,\n              empname: empName,\n              datetime: dt,\n              mil: mil\n            });\n          } catch (err) {\n            Alert.alert('There is something wrong !!!', err.message);\n          }\n\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["C:/Users/Dell/Documents/GitHub/Inventory-Manager/DataBaseUpdate.js"],"names":["firebase","removeItem","item","orgname","empName","empId","d","Date","yr","String","getFullYear","mon","getMonth","date","getDate","hrs","getHours","min","getMinutes","mil","getTime","toString","dt","recId","firestore","collection","doc","set","name","id","quantity","inex","empid","empname","datetime","delete","res","Alert","alert","message","addItem","db","get","q","parseInt","exists","data","updateInv","err","updateRec"],"mappings":"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","sourcesContent":["import firebase from \"firebase\";\r\nimport { Alert } from \"react-native\";\r\n\r\nexport async function removeItem(item, orgname, empName, empId) {\r\n    try {\r\n        const d = new Date();\r\n        const yr = new String(d.getFullYear());\r\n        const mon = new String(1 + d.getMonth());\r\n        const date = new String(d.getDate());\r\n        const hrs = new String(d.getHours());\r\n        var min = new String(d.getMinutes());\r\n        if(min=='0') {\r\n            min = '00';\r\n        }\r\n        const mil = d.getTime().toString();\r\n        const dt = date + '.' + mon + '.' + yr + ' - ' + hrs + ':' + min;\r\n        const recId = mil+empId;\r\n        firebase.firestore().collection('organizations').doc(orgname).collection('records').doc(recId).set({\r\n            name: item.name,\r\n            id: item.id,\r\n            quantity: item.quantity,\r\n            inex: 'ex',\r\n            empid: empId,\r\n            empname: empName,\r\n            datetime: dt,\r\n            mil: mil\r\n        });\r\n        const res = await firebase.firestore().collection('organizations').doc(orgname).collection('inventory').doc(item.id).delete();\r\n      if( res ) {\r\n        Alert.alert('Item successfully deleted');\r\n      }\r\n    } catch (err) {\r\n        Alert.alert('There is something wrong !!!', err.message);\r\n    }\r\n}\r\n\r\nexport async function addItem(id, name, quantity, orgname) {\r\n    try {\r\n        const db = firebase.firestore().collection('organizations').doc(orgname).collection('inventory').doc(id);\r\n        const doc = await db.get();\r\n        var q = parseInt(quantity);\r\n        if(doc.exists) {\r\n            let data = doc.data();\r\n            q = q + parseInt(data.quantity);\r\n            db.set({\r\n                name: name,\r\n                id: id,\r\n                quantity: q.toString()\r\n            });\r\n        }\r\n        else {\r\n            db.set({\r\n                name: name,\r\n                id: id,\r\n                quantity: q.toString()\r\n            });\r\n        }\r\n    } catch (err) {\r\n        Alert.alert('There is something wrong !!!', err.message);\r\n    }\r\n}\r\n\r\nexport async function updateInv(item, quantity, orgname){\r\n    try {\r\n        const id = item.id;\r\n        const name = item.name;\r\n        firebase.firestore().collection('organizations').doc(orgname).collection('inventory').doc(id).set({\r\n            id: id,\r\n            name: name,\r\n            quantity: quantity\r\n        });\r\n    } catch (err) {\r\n        Alert.alert('There is something !!!', err.message);\r\n    }\r\n}\r\n\r\nexport async function updateRec(id, name, quantity, inex, empName, empId, orgname) {\r\n    try {\r\n        const d = new Date();\r\n        const yr = new String(d.getFullYear());\r\n        const mon = new String(1 + d.getMonth());\r\n        const date = new String(d.getDate());\r\n        const hrs = new String(d.getHours());\r\n        const min = new String(d.getMinutes());\r\n        if(min=='0') {\r\n            min = '00';\r\n        }\r\n        const mil = d.getTime().toString();\r\n        const dt = date + '.' + mon + '.' + yr + ' - ' + hrs + ':' + min;\r\n        const recId = mil+empId;\r\n        firebase.firestore().collection('organizations').doc(orgname).collection('records').doc(recId).set({\r\n            name: name,\r\n            id: id,\r\n            quantity: quantity,\r\n            inex: inex,\r\n            empid: empId,\r\n            empname: empName,\r\n            datetime: dt,\r\n            mil: mil\r\n        });\r\n    } catch (err) {\r\n        Alert.alert('There is something wrong !!!', err.message);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}